#!/usr/bin/perl -w

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../commonlib/perllib";
chdir $FindBin::Bin;

use strict;
require 5.8.0;
use POSIX qw(strftime);
use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);
use Petitions;

my @time = localtime();
$time[5]--; # One year ago
my $date = strftime("%Y-%m-%d %H:%M:%S", @time);

# Signatures counts
insert_multi("'signatures_'||emailsent", "FROM signer WHERE showname='t' GROUP BY emailsent");
insert_multi("'signatures_'||emailsent||'_'||body.ref", "FROM signer, petition, body WHERE petition_id=petition.id AND body_id=body.id AND showname='t' GROUP BY emailsent, body.ref");
insert('signatures_confirmed_unique', "SELECT COUNT(DISTINCT email) FROM signer WHERE showname = 't' AND emailsent = 'confirmed' AND signtime > '$date'");
insert_multi("'signatures_confirmed_unique_'||body.ref", "COUNT(DISTINCT signer.email) FROM signer, petition, body WHERE petition_id=petition.id AND body_id=body.id AND showname='t' AND emailsent='confirmed' AND signtime>'$date' GROUP BY body.ref");
insert('signatures_offline', 'SELECT COALESCE(SUM(offline_signers), 0) FROM petition');
insert_multi("'signatures_offline_'||body.ref", 'COALESCE(SUM(offline_signers), 0) FROM petition, body WHERE body_id=body.id GROUP BY body.ref');
dbh()->commit();

# Petition counts
insert_multi("'petitions_'||status", "FROM petition GROUP BY status");
insert_multi("'petitions_'||status||'_'||body.ref", "FROM petition, body WHERE body_id=body.id GROUP BY status, body.ref");
dbh()->commit();

# Petition totals
insert('petitions_all_unconfirmed', "SELECT COUNT(*) FROM petition WHERE status in ('unconfirmed', 'failedconfirm', 'sentconfirm')");
insert_multi("'petitions_all_unconfirmed_'||body.ref", "FROM petition, body WHERE body_id=body.id AND status IN ('unconfirmed', 'failedconfirm', 'sentconfirm') GROUP BY body.ref");
insert('petitions_all_confirmed', "SELECT COUNT(*) FROM petition WHERE status not in ('unconfirmed', 'failedconfirm', 'sentconfirm')");
insert_multi("'petitions_all_confirmed_'||body.ref", "FROM petition, body WHERE body_id=body.id AND status NOT IN ('unconfirmed', 'failedconfirm', 'sentconfirm') GROUP BY body.ref");
dbh()->commit();
 
# Cached petition totals
dbh()->do("delete from stats where key like 'cached\_petitions\_%'");
insert_multi("'cached_petitions_'||status", "FROM petition WHERE status in ('live','finished','rejected') GROUP BY status");
insert_multi("'cached_petitions_'||status||'_'||body.ref", "from petition LEFT JOIN body ON body_id=body.id where status in ('live','finished','rejected') group by status,body.ref");
insert_multi("'cached_petitions_'||status||'_'||category", "FROM petition WHERE status in ('live','finished','rejected') GROUP BY category,status");
insert_multi("'cached_petitions_'||status||'_'||body.ref||'_'||category", "from petition LEFT JOIN body ON body_id=body.id where status in ('live','finished','rejected') group by category,status,body.ref");
dbh()->commit();

# Most prolific signers
# fun but probably pointless (unless maybe helps with antispamming)
# select count(*) as c, email from signer group by signer.email order by c desc limit 20;

sub insert {
    my ($key, $value) = @_;
    dbh()->do("INSERT INTO stats (whencounted, key, value) VALUES
        (ms_current_timestamp(), '$key', ($value))");
}

sub insert_multi {
    my ($key, $query) = @_;
    return if $key =~ /body\.ref/ && mySociety::Config::get('SITE_TYPE') ne 'multiple';
    $query = "COUNT(*) $query" unless $query =~ /^COUNT/ || $query =~ /^SUM/;
    dbh()->do("INSERT INTO stats (whencounted, key, value)
        SELECT ms_current_timestamp(), $key, $query");
}

